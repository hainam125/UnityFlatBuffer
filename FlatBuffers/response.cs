// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace com.gnt.flatbuffers.mash
{

using global::System;
using global::FlatBuffers;

public struct UserLoginResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static UserLoginResp GetRootAsUserLoginResp(ByteBuffer _bb) { return GetRootAsUserLoginResp(_bb, new UserLoginResp()); }
  public static UserLoginResp GetRootAsUserLoginResp(ByteBuffer _bb, UserLoginResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public UserLoginResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long UserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string UniqueId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetUniqueIdBytes() { return __p.__vector_as_arraysegment(6); }
  public string Token { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetTokenBytes() { return __p.__vector_as_arraysegment(8); }

  public static Offset<UserLoginResp> CreateUserLoginResp(FlatBufferBuilder builder,
      long userId = 0,
      StringOffset uniqueIdOffset = default(StringOffset),
      StringOffset tokenOffset = default(StringOffset)) {
    builder.StartObject(3);
    UserLoginResp.AddUserId(builder, userId);
    UserLoginResp.AddToken(builder, tokenOffset);
    UserLoginResp.AddUniqueId(builder, uniqueIdOffset);
    return UserLoginResp.EndUserLoginResp(builder);
  }

  public static void StartUserLoginResp(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUserId(FlatBufferBuilder builder, long userId) { builder.AddLong(0, userId, 0); }
  public static void AddUniqueId(FlatBufferBuilder builder, StringOffset uniqueIdOffset) { builder.AddOffset(1, uniqueIdOffset.Value, 0); }
  public static void AddToken(FlatBufferBuilder builder, StringOffset tokenOffset) { builder.AddOffset(2, tokenOffset.Value, 0); }
  public static Offset<UserLoginResp> EndUserLoginResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<UserLoginResp>(o);
  }
};

public struct SyncTimeResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SyncTimeResp GetRootAsSyncTimeResp(ByteBuffer _bb) { return GetRootAsSyncTimeResp(_bb, new SyncTimeResp()); }
  public static SyncTimeResp GetRootAsSyncTimeResp(ByteBuffer _bb, SyncTimeResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SyncTimeResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Time { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public float Timezone { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<SyncTimeResp> CreateSyncTimeResp(FlatBufferBuilder builder,
      long time = 0,
      float timezone = 0.0f) {
    builder.StartObject(2);
    SyncTimeResp.AddTime(builder, time);
    SyncTimeResp.AddTimezone(builder, timezone);
    return SyncTimeResp.EndSyncTimeResp(builder);
  }

  public static void StartSyncTimeResp(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTime(FlatBufferBuilder builder, long time) { builder.AddLong(0, time, 0); }
  public static void AddTimezone(FlatBufferBuilder builder, float timezone) { builder.AddFloat(1, timezone, 0.0f); }
  public static Offset<SyncTimeResp> EndSyncTimeResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SyncTimeResp>(o);
  }
};

public struct FileChecksum : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static FileChecksum GetRootAsFileChecksum(ByteBuffer _bb) { return GetRootAsFileChecksum(_bb, new FileChecksum()); }
  public static FileChecksum GetRootAsFileChecksum(ByteBuffer _bb, FileChecksum obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public FileChecksum __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
  public int Size { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long Checksum { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<FileChecksum> CreateFileChecksum(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      int size = 0,
      long checksum = 0) {
    builder.StartObject(3);
    FileChecksum.AddChecksum(builder, checksum);
    FileChecksum.AddSize(builder, size);
    FileChecksum.AddName(builder, nameOffset);
    return FileChecksum.EndFileChecksum(builder);
  }

  public static void StartFileChecksum(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddSize(FlatBufferBuilder builder, int size) { builder.AddInt(1, size, 0); }
  public static void AddChecksum(FlatBufferBuilder builder, long checksum) { builder.AddLong(2, checksum, 0); }
  public static Offset<FileChecksum> EndFileChecksum(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<FileChecksum>(o);
  }
};

public struct MasterDataChecksumResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MasterDataChecksumResp GetRootAsMasterDataChecksumResp(ByteBuffer _bb) { return GetRootAsMasterDataChecksumResp(_bb, new MasterDataChecksumResp()); }
  public static MasterDataChecksumResp GetRootAsMasterDataChecksumResp(ByteBuffer _bb, MasterDataChecksumResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MasterDataChecksumResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Revision { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetRevisionBytes() { return __p.__vector_as_arraysegment(4); }
  public FileChecksum? Checksum(int j) { int o = __p.__offset(6); return o != 0 ? (FileChecksum?)(new FileChecksum()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ChecksumLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<MasterDataChecksumResp> CreateMasterDataChecksumResp(FlatBufferBuilder builder,
      StringOffset revisionOffset = default(StringOffset),
      VectorOffset checksumOffset = default(VectorOffset)) {
    builder.StartObject(2);
    MasterDataChecksumResp.AddChecksum(builder, checksumOffset);
    MasterDataChecksumResp.AddRevision(builder, revisionOffset);
    return MasterDataChecksumResp.EndMasterDataChecksumResp(builder);
  }

  public static void StartMasterDataChecksumResp(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddRevision(FlatBufferBuilder builder, StringOffset revisionOffset) { builder.AddOffset(0, revisionOffset.Value, 0); }
  public static void AddChecksum(FlatBufferBuilder builder, VectorOffset checksumOffset) { builder.AddOffset(1, checksumOffset.Value, 0); }
  public static VectorOffset CreateChecksumVector(FlatBufferBuilder builder, Offset<FileChecksum>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartChecksumVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<MasterDataChecksumResp> EndMasterDataChecksumResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MasterDataChecksumResp>(o);
  }
};

public struct ByteHolder : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ByteHolder GetRootAsByteHolder(ByteBuffer _bb) { return GetRootAsByteHolder(_bb, new ByteHolder()); }
  public static ByteHolder GetRootAsByteHolder(ByteBuffer _bb, ByteHolder obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ByteHolder __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public sbyte Data(int j) { int o = __p.__offset(4); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  public int DataLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetDataBytes() { return __p.__vector_as_arraysegment(4); }

  public static Offset<ByteHolder> CreateByteHolder(FlatBufferBuilder builder,
      VectorOffset dataOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ByteHolder.AddData(builder, dataOffset);
    return ByteHolder.EndByteHolder(builder);
  }

  public static void StartByteHolder(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddData(FlatBufferBuilder builder, VectorOffset dataOffset) { builder.AddOffset(0, dataOffset.Value, 0); }
  public static VectorOffset CreateDataVector(FlatBufferBuilder builder, sbyte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddSbyte(data[i]); return builder.EndVector(); }
  public static void StartDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<ByteHolder> EndByteHolder(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ByteHolder>(o);
  }
};

public struct SyncData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SyncData GetRootAsSyncData(ByteBuffer _bb) { return GetRootAsSyncData(_bb, new SyncData()); }
  public static SyncData GetRootAsSyncData(ByteBuffer _bb, SyncData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SyncData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Model { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetModelBytes() { return __p.__vector_as_arraysegment(4); }
  public ByteHolder? Data(int j) { int o = __p.__offset(6); return o != 0 ? (ByteHolder?)(new ByteHolder()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DataLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<SyncData> CreateSyncData(FlatBufferBuilder builder,
      StringOffset modelOffset = default(StringOffset),
      VectorOffset dataOffset = default(VectorOffset)) {
    builder.StartObject(2);
    SyncData.AddData(builder, dataOffset);
    SyncData.AddModel(builder, modelOffset);
    return SyncData.EndSyncData(builder);
  }

  public static void StartSyncData(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddModel(FlatBufferBuilder builder, StringOffset modelOffset) { builder.AddOffset(0, modelOffset.Value, 0); }
  public static void AddData(FlatBufferBuilder builder, VectorOffset dataOffset) { builder.AddOffset(1, dataOffset.Value, 0); }
  public static VectorOffset CreateDataVector(FlatBufferBuilder builder, Offset<ByteHolder>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<SyncData> EndSyncData(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SyncData>(o);
  }
};

public struct SyncUserDataResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SyncUserDataResp GetRootAsSyncUserDataResp(ByteBuffer _bb) { return GetRootAsSyncUserDataResp(_bb, new SyncUserDataResp()); }
  public static SyncUserDataResp GetRootAsSyncUserDataResp(ByteBuffer _bb, SyncUserDataResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SyncUserDataResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SyncData? Data(int j) { int o = __p.__offset(4); return o != 0 ? (SyncData?)(new SyncData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DataLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<SyncUserDataResp> CreateSyncUserDataResp(FlatBufferBuilder builder,
      VectorOffset dataOffset = default(VectorOffset)) {
    builder.StartObject(1);
    SyncUserDataResp.AddData(builder, dataOffset);
    return SyncUserDataResp.EndSyncUserDataResp(builder);
  }

  public static void StartSyncUserDataResp(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddData(FlatBufferBuilder builder, VectorOffset dataOffset) { builder.AddOffset(0, dataOffset.Value, 0); }
  public static VectorOffset CreateDataVector(FlatBufferBuilder builder, Offset<SyncData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<SyncUserDataResp> EndSyncUserDataResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SyncUserDataResp>(o);
  }
};

public struct BridgePeopleGetResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BridgePeopleGetResp GetRootAsBridgePeopleGetResp(ByteBuffer _bb) { return GetRootAsBridgePeopleGetResp(_bb, new BridgePeopleGetResp()); }
  public static BridgePeopleGetResp GetRootAsBridgePeopleGetResp(ByteBuffer _bb, BridgePeopleGetResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BridgePeopleGetResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long NativeUserId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int GameId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public short DeviceType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public long InviteNativeUserId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string IosDeviceToken { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetIosDeviceTokenBytes() { return __p.__vector_as_arraysegment(12); }
  public string AndroidRegistrationId { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetAndroidRegistrationIdBytes() { return __p.__vector_as_arraysegment(14); }
  public string FcmRegistrationId { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetFcmRegistrationIdBytes() { return __p.__vector_as_arraysegment(16); }
  public string NativeTagName { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNativeTagNameBytes() { return __p.__vector_as_arraysegment(18); }
  public long UserId { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public sbyte UserRank { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public string NickName { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNickNameBytes() { return __p.__vector_as_arraysegment(24); }
  public string TagName { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetTagNameBytes() { return __p.__vector_as_arraysegment(26); }
  public sbyte Sex { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public string ThumbnailUrl { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetThumbnailUrlBytes() { return __p.__vector_as_arraysegment(30); }
  public string Introduction { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetIntroductionBytes() { return __p.__vector_as_arraysegment(32); }
  public short Channel { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public string MailaddressPc { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetMailaddressPcBytes() { return __p.__vector_as_arraysegment(36); }
  public string MailaddressPcCheckDate { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetMailaddressPcCheckDateBytes() { return __p.__vector_as_arraysegment(38); }
  public string MailadderssMobile { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetMailadderssMobileBytes() { return __p.__vector_as_arraysegment(40); }
  public string MailaddressMobileCheckDate { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetMailaddressMobileCheckDateBytes() { return __p.__vector_as_arraysegment(42); }
  public sbyte IsInsiderUser { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public string BirthYearMonth { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetBirthYearMonthBytes() { return __p.__vector_as_arraysegment(46); }
  public string BridgeBirthYearMonth { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetBridgeBirthYearMonthBytes() { return __p.__vector_as_arraysegment(48); }
  public short CesaLimitAge { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public string HashTelNumber { get { int o = __p.__offset(52); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetHashTelNumberBytes() { return __p.__vector_as_arraysegment(52); }
  public string SqexId { get { int o = __p.__offset(54); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetSqexIdBytes() { return __p.__vector_as_arraysegment(54); }
  public string SqexIdUpdateAt { get { int o = __p.__offset(56); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetSqexIdUpdateAtBytes() { return __p.__vector_as_arraysegment(56); }
  public long ChargeMoneyTotal { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ChargeMoneyThisMonth { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string LastChargeDate { get { int o = __p.__offset(62); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetLastChargeDateBytes() { return __p.__vector_as_arraysegment(62); }

  public static Offset<BridgePeopleGetResp> CreateBridgePeopleGetResp(FlatBufferBuilder builder,
      long nativeUserId = 0,
      int gameId = 0,
      short deviceType = 0,
      long inviteNativeUserId = 0,
      StringOffset iosDeviceTokenOffset = default(StringOffset),
      StringOffset androidRegistrationIdOffset = default(StringOffset),
      StringOffset fcmRegistrationIdOffset = default(StringOffset),
      StringOffset nativeTagNameOffset = default(StringOffset),
      long userId = 0,
      sbyte userRank = 0,
      StringOffset nickNameOffset = default(StringOffset),
      StringOffset tagNameOffset = default(StringOffset),
      sbyte sex = 0,
      StringOffset thumbnailUrlOffset = default(StringOffset),
      StringOffset introductionOffset = default(StringOffset),
      short channel = 0,
      StringOffset mailaddressPcOffset = default(StringOffset),
      StringOffset mailaddressPcCheckDateOffset = default(StringOffset),
      StringOffset mailadderssMobileOffset = default(StringOffset),
      StringOffset mailaddressMobileCheckDateOffset = default(StringOffset),
      sbyte isInsiderUser = 0,
      StringOffset birthYearMonthOffset = default(StringOffset),
      StringOffset bridgeBirthYearMonthOffset = default(StringOffset),
      short cesaLimitAge = 0,
      StringOffset hashTelNumberOffset = default(StringOffset),
      StringOffset sqexIdOffset = default(StringOffset),
      StringOffset sqexIdUpdateAtOffset = default(StringOffset),
      long chargeMoneyTotal = 0,
      long chargeMoneyThisMonth = 0,
      StringOffset lastChargeDateOffset = default(StringOffset)) {
    builder.StartObject(30);
    BridgePeopleGetResp.AddChargeMoneyThisMonth(builder, chargeMoneyThisMonth);
    BridgePeopleGetResp.AddChargeMoneyTotal(builder, chargeMoneyTotal);
    BridgePeopleGetResp.AddUserId(builder, userId);
    BridgePeopleGetResp.AddInviteNativeUserId(builder, inviteNativeUserId);
    BridgePeopleGetResp.AddNativeUserId(builder, nativeUserId);
    BridgePeopleGetResp.AddLastChargeDate(builder, lastChargeDateOffset);
    BridgePeopleGetResp.AddSqexIdUpdateAt(builder, sqexIdUpdateAtOffset);
    BridgePeopleGetResp.AddSqexId(builder, sqexIdOffset);
    BridgePeopleGetResp.AddHashTelNumber(builder, hashTelNumberOffset);
    BridgePeopleGetResp.AddBridgeBirthYearMonth(builder, bridgeBirthYearMonthOffset);
    BridgePeopleGetResp.AddBirthYearMonth(builder, birthYearMonthOffset);
    BridgePeopleGetResp.AddMailaddressMobileCheckDate(builder, mailaddressMobileCheckDateOffset);
    BridgePeopleGetResp.AddMailadderssMobile(builder, mailadderssMobileOffset);
    BridgePeopleGetResp.AddMailaddressPcCheckDate(builder, mailaddressPcCheckDateOffset);
    BridgePeopleGetResp.AddMailaddressPc(builder, mailaddressPcOffset);
    BridgePeopleGetResp.AddIntroduction(builder, introductionOffset);
    BridgePeopleGetResp.AddThumbnailUrl(builder, thumbnailUrlOffset);
    BridgePeopleGetResp.AddTagName(builder, tagNameOffset);
    BridgePeopleGetResp.AddNickName(builder, nickNameOffset);
    BridgePeopleGetResp.AddNativeTagName(builder, nativeTagNameOffset);
    BridgePeopleGetResp.AddFcmRegistrationId(builder, fcmRegistrationIdOffset);
    BridgePeopleGetResp.AddAndroidRegistrationId(builder, androidRegistrationIdOffset);
    BridgePeopleGetResp.AddIosDeviceToken(builder, iosDeviceTokenOffset);
    BridgePeopleGetResp.AddGameId(builder, gameId);
    BridgePeopleGetResp.AddCesaLimitAge(builder, cesaLimitAge);
    BridgePeopleGetResp.AddChannel(builder, channel);
    BridgePeopleGetResp.AddDeviceType(builder, deviceType);
    BridgePeopleGetResp.AddIsInsiderUser(builder, isInsiderUser);
    BridgePeopleGetResp.AddSex(builder, sex);
    BridgePeopleGetResp.AddUserRank(builder, userRank);
    return BridgePeopleGetResp.EndBridgePeopleGetResp(builder);
  }

  public static void StartBridgePeopleGetResp(FlatBufferBuilder builder) { builder.StartObject(30); }
  public static void AddNativeUserId(FlatBufferBuilder builder, long nativeUserId) { builder.AddLong(0, nativeUserId, 0); }
  public static void AddGameId(FlatBufferBuilder builder, int gameId) { builder.AddInt(1, gameId, 0); }
  public static void AddDeviceType(FlatBufferBuilder builder, short deviceType) { builder.AddShort(2, deviceType, 0); }
  public static void AddInviteNativeUserId(FlatBufferBuilder builder, long inviteNativeUserId) { builder.AddLong(3, inviteNativeUserId, 0); }
  public static void AddIosDeviceToken(FlatBufferBuilder builder, StringOffset iosDeviceTokenOffset) { builder.AddOffset(4, iosDeviceTokenOffset.Value, 0); }
  public static void AddAndroidRegistrationId(FlatBufferBuilder builder, StringOffset androidRegistrationIdOffset) { builder.AddOffset(5, androidRegistrationIdOffset.Value, 0); }
  public static void AddFcmRegistrationId(FlatBufferBuilder builder, StringOffset fcmRegistrationIdOffset) { builder.AddOffset(6, fcmRegistrationIdOffset.Value, 0); }
  public static void AddNativeTagName(FlatBufferBuilder builder, StringOffset nativeTagNameOffset) { builder.AddOffset(7, nativeTagNameOffset.Value, 0); }
  public static void AddUserId(FlatBufferBuilder builder, long userId) { builder.AddLong(8, userId, 0); }
  public static void AddUserRank(FlatBufferBuilder builder, sbyte userRank) { builder.AddSbyte(9, userRank, 0); }
  public static void AddNickName(FlatBufferBuilder builder, StringOffset nickNameOffset) { builder.AddOffset(10, nickNameOffset.Value, 0); }
  public static void AddTagName(FlatBufferBuilder builder, StringOffset tagNameOffset) { builder.AddOffset(11, tagNameOffset.Value, 0); }
  public static void AddSex(FlatBufferBuilder builder, sbyte sex) { builder.AddSbyte(12, sex, 0); }
  public static void AddThumbnailUrl(FlatBufferBuilder builder, StringOffset thumbnailUrlOffset) { builder.AddOffset(13, thumbnailUrlOffset.Value, 0); }
  public static void AddIntroduction(FlatBufferBuilder builder, StringOffset introductionOffset) { builder.AddOffset(14, introductionOffset.Value, 0); }
  public static void AddChannel(FlatBufferBuilder builder, short channel) { builder.AddShort(15, channel, 0); }
  public static void AddMailaddressPc(FlatBufferBuilder builder, StringOffset mailaddressPcOffset) { builder.AddOffset(16, mailaddressPcOffset.Value, 0); }
  public static void AddMailaddressPcCheckDate(FlatBufferBuilder builder, StringOffset mailaddressPcCheckDateOffset) { builder.AddOffset(17, mailaddressPcCheckDateOffset.Value, 0); }
  public static void AddMailadderssMobile(FlatBufferBuilder builder, StringOffset mailadderssMobileOffset) { builder.AddOffset(18, mailadderssMobileOffset.Value, 0); }
  public static void AddMailaddressMobileCheckDate(FlatBufferBuilder builder, StringOffset mailaddressMobileCheckDateOffset) { builder.AddOffset(19, mailaddressMobileCheckDateOffset.Value, 0); }
  public static void AddIsInsiderUser(FlatBufferBuilder builder, sbyte isInsiderUser) { builder.AddSbyte(20, isInsiderUser, 0); }
  public static void AddBirthYearMonth(FlatBufferBuilder builder, StringOffset birthYearMonthOffset) { builder.AddOffset(21, birthYearMonthOffset.Value, 0); }
  public static void AddBridgeBirthYearMonth(FlatBufferBuilder builder, StringOffset bridgeBirthYearMonthOffset) { builder.AddOffset(22, bridgeBirthYearMonthOffset.Value, 0); }
  public static void AddCesaLimitAge(FlatBufferBuilder builder, short cesaLimitAge) { builder.AddShort(23, cesaLimitAge, 0); }
  public static void AddHashTelNumber(FlatBufferBuilder builder, StringOffset hashTelNumberOffset) { builder.AddOffset(24, hashTelNumberOffset.Value, 0); }
  public static void AddSqexId(FlatBufferBuilder builder, StringOffset sqexIdOffset) { builder.AddOffset(25, sqexIdOffset.Value, 0); }
  public static void AddSqexIdUpdateAt(FlatBufferBuilder builder, StringOffset sqexIdUpdateAtOffset) { builder.AddOffset(26, sqexIdUpdateAtOffset.Value, 0); }
  public static void AddChargeMoneyTotal(FlatBufferBuilder builder, long chargeMoneyTotal) { builder.AddLong(27, chargeMoneyTotal, 0); }
  public static void AddChargeMoneyThisMonth(FlatBufferBuilder builder, long chargeMoneyThisMonth) { builder.AddLong(28, chargeMoneyThisMonth, 0); }
  public static void AddLastChargeDate(FlatBufferBuilder builder, StringOffset lastChargeDateOffset) { builder.AddOffset(29, lastChargeDateOffset.Value, 0); }
  public static Offset<BridgePeopleGetResp> EndBridgePeopleGetResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BridgePeopleGetResp>(o);
  }
};

public struct BridgeCoinDepositCreateResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BridgeCoinDepositCreateResp GetRootAsBridgeCoinDepositCreateResp(ByteBuffer _bb) { return GetRootAsBridgeCoinDepositCreateResp(_bb, new BridgeCoinDepositCreateResp()); }
  public static BridgeCoinDepositCreateResp GetRootAsBridgeCoinDepositCreateResp(ByteBuffer _bb, BridgeCoinDepositCreateResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BridgeCoinDepositCreateResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string BridgeTransId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetBridgeTransIdBytes() { return __p.__vector_as_arraysegment(4); }

  public static Offset<BridgeCoinDepositCreateResp> CreateBridgeCoinDepositCreateResp(FlatBufferBuilder builder,
      StringOffset bridgeTransIdOffset = default(StringOffset)) {
    builder.StartObject(1);
    BridgeCoinDepositCreateResp.AddBridgeTransId(builder, bridgeTransIdOffset);
    return BridgeCoinDepositCreateResp.EndBridgeCoinDepositCreateResp(builder);
  }

  public static void StartBridgeCoinDepositCreateResp(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddBridgeTransId(FlatBufferBuilder builder, StringOffset bridgeTransIdOffset) { builder.AddOffset(0, bridgeTransIdOffset.Value, 0); }
  public static Offset<BridgeCoinDepositCreateResp> EndBridgeCoinDepositCreateResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BridgeCoinDepositCreateResp>(o);
  }
};

public struct BridgeCoinDepositIosResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BridgeCoinDepositIosResp GetRootAsBridgeCoinDepositIosResp(ByteBuffer _bb) { return GetRootAsBridgeCoinDepositIosResp(_bb, new BridgeCoinDepositIosResp()); }
  public static BridgeCoinDepositIosResp GetRootAsBridgeCoinDepositIosResp(ByteBuffer _bb, BridgeCoinDepositIosResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BridgeCoinDepositIosResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ReceiptStatus { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetReceiptStatusBytes() { return __p.__vector_as_arraysegment(4); }
  public string ReciptProductId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetReciptProductIdBytes() { return __p.__vector_as_arraysegment(6); }
  public sbyte CommitStatus { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }

  public static Offset<BridgeCoinDepositIosResp> CreateBridgeCoinDepositIosResp(FlatBufferBuilder builder,
      StringOffset receiptStatusOffset = default(StringOffset),
      StringOffset reciptProductIdOffset = default(StringOffset),
      sbyte commitStatus = 0) {
    builder.StartObject(3);
    BridgeCoinDepositIosResp.AddReciptProductId(builder, reciptProductIdOffset);
    BridgeCoinDepositIosResp.AddReceiptStatus(builder, receiptStatusOffset);
    BridgeCoinDepositIosResp.AddCommitStatus(builder, commitStatus);
    return BridgeCoinDepositIosResp.EndBridgeCoinDepositIosResp(builder);
  }

  public static void StartBridgeCoinDepositIosResp(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddReceiptStatus(FlatBufferBuilder builder, StringOffset receiptStatusOffset) { builder.AddOffset(0, receiptStatusOffset.Value, 0); }
  public static void AddReciptProductId(FlatBufferBuilder builder, StringOffset reciptProductIdOffset) { builder.AddOffset(1, reciptProductIdOffset.Value, 0); }
  public static void AddCommitStatus(FlatBufferBuilder builder, sbyte commitStatus) { builder.AddSbyte(2, commitStatus, 0); }
  public static Offset<BridgeCoinDepositIosResp> EndBridgeCoinDepositIosResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BridgeCoinDepositIosResp>(o);
  }
};

public struct PinCodeCreateResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PinCodeCreateResp GetRootAsPinCodeCreateResp(ByteBuffer _bb) { return GetRootAsPinCodeCreateResp(_bb, new PinCodeCreateResp()); }
  public static PinCodeCreateResp GetRootAsPinCodeCreateResp(ByteBuffer _bb, PinCodeCreateResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PinCodeCreateResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PinCode { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetPinCodeBytes() { return __p.__vector_as_arraysegment(4); }

  public static Offset<PinCodeCreateResp> CreatePinCodeCreateResp(FlatBufferBuilder builder,
      StringOffset pinCodeOffset = default(StringOffset)) {
    builder.StartObject(1);
    PinCodeCreateResp.AddPinCode(builder, pinCodeOffset);
    return PinCodeCreateResp.EndPinCodeCreateResp(builder);
  }

  public static void StartPinCodeCreateResp(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPinCode(FlatBufferBuilder builder, StringOffset pinCodeOffset) { builder.AddOffset(0, pinCodeOffset.Value, 0); }
  public static Offset<PinCodeCreateResp> EndPinCodeCreateResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PinCodeCreateResp>(o);
  }
};

public struct PinCodeGetResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PinCodeGetResp GetRootAsPinCodeGetResp(ByteBuffer _bb) { return GetRootAsPinCodeGetResp(_bb, new PinCodeGetResp()); }
  public static PinCodeGetResp GetRootAsPinCodeGetResp(ByteBuffer _bb, PinCodeGetResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PinCodeGetResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TargetGameId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string TargetIdentifier { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetTargetIdentifierBytes() { return __p.__vector_as_arraysegment(6); }

  public static Offset<PinCodeGetResp> CreatePinCodeGetResp(FlatBufferBuilder builder,
      int targetGameId = 0,
      StringOffset targetIdentifierOffset = default(StringOffset)) {
    builder.StartObject(2);
    PinCodeGetResp.AddTargetIdentifier(builder, targetIdentifierOffset);
    PinCodeGetResp.AddTargetGameId(builder, targetGameId);
    return PinCodeGetResp.EndPinCodeGetResp(builder);
  }

  public static void StartPinCodeGetResp(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTargetGameId(FlatBufferBuilder builder, int targetGameId) { builder.AddInt(0, targetGameId, 0); }
  public static void AddTargetIdentifier(FlatBufferBuilder builder, StringOffset targetIdentifierOffset) { builder.AddOffset(1, targetIdentifierOffset.Value, 0); }
  public static Offset<PinCodeGetResp> EndPinCodeGetResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PinCodeGetResp>(o);
  }
};

public struct NotificationDetailResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static NotificationDetailResp GetRootAsNotificationDetailResp(ByteBuffer _bb) { return GetRootAsNotificationDetailResp(_bb, new NotificationDetailResp()); }
  public static NotificationDetailResp GetRootAsNotificationDetailResp(ByteBuffer _bb, NotificationDetailResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public NotificationDetailResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long InfoId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string InfoImageUrl { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetInfoImageUrlBytes() { return __p.__vector_as_arraysegment(6); }
  public string InfoCategoryId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetInfoCategoryIdBytes() { return __p.__vector_as_arraysegment(8); }
  public string InfoCategoryName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetInfoCategoryNameBytes() { return __p.__vector_as_arraysegment(10); }
  public string InfoTitle { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetInfoTitleBytes() { return __p.__vector_as_arraysegment(12); }
  public string InfoBody { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetInfoBodyBytes() { return __p.__vector_as_arraysegment(14); }
  public long StartAt { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long EndAt { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CreateAt { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<NotificationDetailResp> CreateNotificationDetailResp(FlatBufferBuilder builder,
      long infoId = 0,
      StringOffset infoImageUrlOffset = default(StringOffset),
      StringOffset infoCategoryIdOffset = default(StringOffset),
      StringOffset infoCategoryNameOffset = default(StringOffset),
      StringOffset infoTitleOffset = default(StringOffset),
      StringOffset infoBodyOffset = default(StringOffset),
      long startAt = 0,
      long endAt = 0,
      long createAt = 0) {
    builder.StartObject(9);
    NotificationDetailResp.AddCreateAt(builder, createAt);
    NotificationDetailResp.AddEndAt(builder, endAt);
    NotificationDetailResp.AddStartAt(builder, startAt);
    NotificationDetailResp.AddInfoId(builder, infoId);
    NotificationDetailResp.AddInfoBody(builder, infoBodyOffset);
    NotificationDetailResp.AddInfoTitle(builder, infoTitleOffset);
    NotificationDetailResp.AddInfoCategoryName(builder, infoCategoryNameOffset);
    NotificationDetailResp.AddInfoCategoryId(builder, infoCategoryIdOffset);
    NotificationDetailResp.AddInfoImageUrl(builder, infoImageUrlOffset);
    return NotificationDetailResp.EndNotificationDetailResp(builder);
  }

  public static void StartNotificationDetailResp(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddInfoId(FlatBufferBuilder builder, long infoId) { builder.AddLong(0, infoId, 0); }
  public static void AddInfoImageUrl(FlatBufferBuilder builder, StringOffset infoImageUrlOffset) { builder.AddOffset(1, infoImageUrlOffset.Value, 0); }
  public static void AddInfoCategoryId(FlatBufferBuilder builder, StringOffset infoCategoryIdOffset) { builder.AddOffset(2, infoCategoryIdOffset.Value, 0); }
  public static void AddInfoCategoryName(FlatBufferBuilder builder, StringOffset infoCategoryNameOffset) { builder.AddOffset(3, infoCategoryNameOffset.Value, 0); }
  public static void AddInfoTitle(FlatBufferBuilder builder, StringOffset infoTitleOffset) { builder.AddOffset(4, infoTitleOffset.Value, 0); }
  public static void AddInfoBody(FlatBufferBuilder builder, StringOffset infoBodyOffset) { builder.AddOffset(5, infoBodyOffset.Value, 0); }
  public static void AddStartAt(FlatBufferBuilder builder, long startAt) { builder.AddLong(6, startAt, 0); }
  public static void AddEndAt(FlatBufferBuilder builder, long endAt) { builder.AddLong(7, endAt, 0); }
  public static void AddCreateAt(FlatBufferBuilder builder, long createAt) { builder.AddLong(8, createAt, 0); }
  public static Offset<NotificationDetailResp> EndNotificationDetailResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NotificationDetailResp>(o);
  }
};

public struct NotificationResp : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static NotificationResp GetRootAsNotificationResp(ByteBuffer _bb) { return GetRootAsNotificationResp(_bb, new NotificationResp()); }
  public static NotificationResp GetRootAsNotificationResp(ByteBuffer _bb, NotificationResp obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public NotificationResp __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public NotificationDetailResp? InfoList(int j) { int o = __p.__offset(4); return o != 0 ? (NotificationDetailResp?)(new NotificationDetailResp()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InfoListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<NotificationResp> CreateNotificationResp(FlatBufferBuilder builder,
      VectorOffset infoListOffset = default(VectorOffset)) {
    builder.StartObject(1);
    NotificationResp.AddInfoList(builder, infoListOffset);
    return NotificationResp.EndNotificationResp(builder);
  }

  public static void StartNotificationResp(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddInfoList(FlatBufferBuilder builder, VectorOffset infoListOffset) { builder.AddOffset(0, infoListOffset.Value, 0); }
  public static VectorOffset CreateInfoListVector(FlatBufferBuilder builder, Offset<NotificationDetailResp>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartInfoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NotificationResp> EndNotificationResp(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NotificationResp>(o);
  }
};


}
